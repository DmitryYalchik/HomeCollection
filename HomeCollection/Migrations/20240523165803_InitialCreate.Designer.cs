// <auto-generated />
using System;
using HomeCollection.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeCollection.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20240523165803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("HomeCollection.Models.Building", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("HomeCollection.Models.Enterance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildingId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Enterances");
                });

            modelBuilder.Entity("HomeCollection.Models.Flat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnteranceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EnteranceId");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("HomeCollection.Models.People", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlatId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("HomeCollection.Models.Enterance", b =>
                {
                    b.HasOne("HomeCollection.Models.Building", "Building")
                        .WithMany("Enterances")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("HomeCollection.Models.Flat", b =>
                {
                    b.HasOne("HomeCollection.Models.Enterance", "Enterance")
                        .WithMany("Flats")
                        .HasForeignKey("EnteranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterance");
                });

            modelBuilder.Entity("HomeCollection.Models.People", b =>
                {
                    b.HasOne("HomeCollection.Models.Flat", "Flat")
                        .WithMany("Peoples")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flat");
                });

            modelBuilder.Entity("HomeCollection.Models.Building", b =>
                {
                    b.Navigation("Enterances");
                });

            modelBuilder.Entity("HomeCollection.Models.Enterance", b =>
                {
                    b.Navigation("Flats");
                });

            modelBuilder.Entity("HomeCollection.Models.Flat", b =>
                {
                    b.Navigation("Peoples");
                });
#pragma warning restore 612, 618
        }
    }
}
